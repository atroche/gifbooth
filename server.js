// Generated by CoffeeScript 1.3.3
(function() {
  var IMGUR_API_KEY, fs, im, imgur, io, postImageToImgur, uuid, writeFile;

  IMGUR_API_KEY = "652deb70e66249c7046971f0850f144d";

  io = require('socket.io').listen(8080);

  fs = require('fs');

  im = require('imagemagick');

  uuid = require('node-uuid');

  imgur = require('imgur');

  imgur.setKey(IMGUR_API_KEY);

  postImageToImgur = function(filename, socket) {
    return imgur.upload(filename, function(response) {
      console.log(response.error);
      console.log(response);
      console.log(response.links.original);
      return socket.emit('imgur', {
        url: response.links.original
      });
    });
  };

  io.sockets.on('connection', function(socket) {
    var expectedImages, imagesReceived, uploadPrefix;
    expectedImages = null;
    imagesReceived = null;
    uploadPrefix = null;
    socket.on('numImages', function(data) {
      expectedImages = data.numImages;
      return uploadPrefix = uuid.v4();
    });
    return socket.on('image', function(data) {
      var filename, imgData;
      imgData = data.contents.replace(/^data:image\/jpeg;base64,/, "");
      console.log(imgData.length);
      filename = "/tmp/" + uploadPrefix + data.imgNum + ".jpg";
      return fs.writeFile(filename, imgData, 'base64', function(err) {
        return im.convert([filename, '-resize', '320x240', filename], function() {
          var i, imArgs;
          imagesReceived += 1;
          if (imagesReceived >= expectedImages) {
            imArgs = (function() {
              var _i, _results;
              _results = [];
              for (i = _i = 0; 0 <= expectedImages ? _i < expectedImages : _i > expectedImages; i = 0 <= expectedImages ? ++_i : --_i) {
                _results.push("/tmp/" + uploadPrefix + i + ".jpg");
              }
              return _results;
            })();
            imArgs.push.apply(imArgs, ['-loop', '0', 'animation.gif']);
            console.log(imArgs);
            im.convert(imArgs, function(err) {
              if (err) {
                console.log(err);
              }
              return postImageToImgur('animation.gif', socket);
            });
            imagesReceived = 0;
            return expectedImages = 0;
          }
        });
      });
    });
  });

  writeFile = function(data, filename) {
    return fs.writeFile(filename, data, 'base64', function(err) {});
  };

}).call(this);
